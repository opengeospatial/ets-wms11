<?xml version="1.0" encoding="UTF-8"?>
<package xmlns="http://www.occamlab.com/ctl"
         xmlns:ctl="http://www.occamlab.com/ctl"
         xmlns:example="http://www.somehost.com/example"
         xmlns:functions="http://www.occamlab.com/wms-1.1.1/src/ctl/functions.xml"
         xmlns:parsers="http://www.occamlab.com/te/parsers"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:wms="http://www.opengis.net/wms"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <xi:include href="tests.xml" />
  <xi:include href="functions.xml" />

  <parser name="wms:CustomTransformer">
    <java class="com.occamlab.te.parsers.CustomTransformer" method="parse" />
  </parser>
  <parser name="parsers:HeadersParser">
    <java class="com.occamlab.te.parsers.HeadersParser" method="parse" />
  </parser>
  <parser name="example:ImageStats">
    <java class="org.opengroup.ts.handlers.extensions.ogc.ResponseTransformer"
          initialized="true"
          method="translate">
      <with-param name="class">org.opengis.cite.transformers.ImageStats</with-param>
    </java>
  </parser>
  <parser name="example:StringLength">
    <java class="org.opengroup.ts.handlers.extensions.ogc.ResponseTransformer"
          initialized="true"
          method="translate">
      <with-param name="class">org.opengis.cite.transformers.StringLength</with-param>
    </java>
  </parser>
  <parser name="wms:GMLValidatingParser">
    <java class="com.occamlab.te.parsers.GMLValidatingParser" initialized="true"
          method="parse">
      <with-param name="documentlocations">
        <documentlocations xmlns="">
          <parm>
            <name>http://www.galdosinc.com/xml/properties/dtdLocation/WMT_MS_Capabilities</name>
            <value>http://schemas.opengis.net/wms/1.1.1/capabilities_1_1_1.dtd</value>
          </parm>
        </documentlocations>
      </with-param>
    </java>
  </parser>

  <test name="wms:wms_main">
    <param name="VAR_WMS_CAPABILITIES_URL" />
    <param name="updatesequence" />
    <param name="VAR_HIGH_UPDATESEQUENCE" />
    <param name="VAR_LOW_UPDATESEQUENCE" />
    <param name="CERT_PROFILE" />
    <param name="recommended" />
    <param name="testgml" />
    <param name="free" />
    <param name="B_BOX_CONSTRAINT" />
    <param name="is-interactive-enabled" />
    <assertion>This WMS is valid</assertion>
    <code>
      <xsl:variable name="VAR_WMS_CAPABILITIES">
        <request>
          <url>
            <xsl:value-of select="$VAR_WMS_CAPABILITIES_URL" />
          </url>
          <method>get</method>
        </request>
      </xsl:variable>
      <xsl:variable name="auto_updatesequence"
                    select="$updatesequence='auto_updatesequence'" />
      <xsl:variable name="manual_updatesequence"
                    select="$updatesequence='manual_updatesequence'" />
      <xsl:variable name="VAR_HIGH_UPDATESEQUENCE">
        <xsl:value-of select="$VAR_HIGH_UPDATESEQUENCE" />
      </xsl:variable>
      <xsl:variable name="VAR_LOW_UPDATESEQUENCE">
        <xsl:value-of select="$VAR_LOW_UPDATESEQUENCE" />
      </xsl:variable>
      <xsl:variable name="no_profile"
                    select="$CERT_PROFILE='no_profile'" />
      <xsl:variable name="basic_profile"
                    select="$CERT_PROFILE='basic_profile'" />
      <xsl:variable name="queryable_profile"
                    select="$CERT_PROFILE='queryable_profile'" />
      <xsl:variable name="recommended"
                    select="$recommended='recommended'" />
      <xsl:variable name="testgml" select="$testgml='testgml'" />
      <xsl:variable name="free" select="$free='free'" />
      <xsl:variable name="loosebboxconstraints"
                    select="$B_BOX_CONSTRAINT='loosebboxconstraints'" />
      <xsl:variable name="strictbboxconstraints"
                    select="$B_BOX_CONSTRAINT='strictbboxconstraints'" />
      <xsl:variable name="eitherbboxconstraint"
                    select="$B_BOX_CONSTRAINT='eitherbboxconstraint'" />
      <xsl:for-each select="$VAR_WMS_CAPABILITIES">
        <xsl:variable name="VAR_WMS_VERSION">
          <xsl:value-of select="string('1.1.1')" />
        </xsl:variable>
        <xsl:variable name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL">
          <xsl:value-of
                  select="functions:append-kvp(/WMT_MS_Capabilities/Capability/Request/GetCapabilities/DCPType/HTTP/Get/OnlineResource/@*[local-name() = 'href'], '')" />
        </xsl:variable>
        <xsl:variable name="VAR_WMS_GET_MAP_HTTP_GET_URL">
          <xsl:value-of
                  select="functions:append-kvp(/WMT_MS_Capabilities/Capability/Request/GetMap/DCPType/HTTP/Get/OnlineResource/@*[local-name() = 'href'], '')" />
        </xsl:variable>
        <xsl:variable name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL">
          <xsl:value-of
                  select="functions:append-kvp(/WMT_MS_Capabilities/Capability/Request/GetFeatureInfo/DCPType/HTTP/Get/OnlineResource/@*[local-name() = 'href'], '')" />
        </xsl:variable>
        <xsl:variable name="VAR_CURRENT_UPDATESEQUENCE">
          <xsl:value-of select="string(/WMT_MS_Capabilities/@updateSequence)" />
        </xsl:variable>
        <xsl:variable name="VAR_AUTO_HIGH_UPDATESEQUENCE">
          <xsl:value-of select="functions:inc(/WMT_MS_Capabilities/@updateSequence, 1)" />
        </xsl:variable>
        <xsl:variable name="VAR_AUTO_LOW_UPDATESEQUENCE">
          <xsl:value-of select="functions:inc(/WMT_MS_Capabilities/@updateSequence, -1)" />
        </xsl:variable>
        <xsl:variable name="VAR_IMAGE_FORMAT">
          <xsl:value-of select="string(/WMT_MS_Capabilities/Capability/Request/GetMap/Format[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_READABLE_IMAGE_FORMAT">
          <xsl:value-of
                  select="string((/WMT_MS_Capabilities/Capability/Request/GetMap/Format[. = 'image/gif' or .='image/png' or .='image/jpeg'])[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_LOSSLESS_FORMAT">
          <xsl:value-of
                  select="string((/WMT_MS_Capabilities/Capability/Request/GetMap/Format[. = 'image/gif' or .='image/png'])[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_TRANSPARENT_FORMAT">
          <xsl:value-of
                  select="string((/WMT_MS_Capabilities/Capability/Request/GetMap/Format[. = 'image/gif' or .='image/png'])[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_INHERENT_STYLE">
          <xsl:value-of select="string(//Layer[starts-with(Title, 'cite') and position()=1]/Style[1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_LAYER_WITH_INHERENT_STYLE">
          <xsl:value-of select="string(//Layer[starts-with(Title, 'cite') and Style and position()=1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_INHERITED_STYLE">
          <xsl:value-of
                  select="string(//Layer[starts-with(Title, 'cite') and not(Style)]/ancestor::Layer/Style[1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_LAYER_WITH_INHERITED_STYLE">
          <xsl:value-of
                  select="string(//Layer[starts-with(Title, 'cite') and not(Style) and ancestor::Layer/Style]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_STYLE">
          <xsl:value-of
                  select="string((//Layer[starts-with(Title, 'cite')]/ancestor-or-self::Layer/Style[1]/Name)[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_LAYER_WITH_STYLE">
          <xsl:value-of
                  select="string((//Layer[starts-with(Title, 'cite') and ancestor-or-self::Layer/Style]/Name)[1])" />
        </xsl:variable>
        <xsl:variable name="VAR_LAYER_WITH_INHERENT_SRS">
          <xsl:value-of
                  select="string((//Layer[starts-with(Title, 'cite') and SRS[contains(., 'EPSG:4326')]])[1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_LAYER_WITH_INHERITED_SRS">
          <xsl:value-of
                  select="string((//Layer[starts-with(Title, 'cite') and not(SRS[contains(., 'EPSG:4326')])])[1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_UNQUERYABLE_LAYER">
          <xsl:value-of select="string(//Layer[starts-with(Title, 'cite') and @queryable='0'][1]/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_STDDATA_EXISTS">
          <xsl:value-of
                  select="count(//Layer[(Title = 'cite:BasicPolygons' or    Title = 'cite:Bridges' or    Title = 'cite:Buildings' or    Title = 'cite:DividedRoutes' or    Title = 'cite:Forests' or    Title = 'cite:Lakes' or    Title = 'cite:MapNeatline' or    Title = 'cite:NamedPlaces' or    Title = 'cite:Ponds' or    Title = 'cite:RoadSegments' or    Title = 'cite:Streams')    and ancestor-or-self::Layer/SRS[contains(., 'EPSG:4326')]    and not(@noSubsets = 1)    and (not(@fixedWidth) or @fixedWidth = 0)    and (not(@fixedHeight) or @fixedHeight = 0)]) = 11   " />
        </xsl:variable>
        <xsl:variable name="VAR_QUERYABLE_LAYERS_EXIST">
          <xsl:value-of
                  select="count(//Layer[Title = 'cite:BasicPolygons' and @queryable = '1']) &gt;0 and    count(//Layer[Title = 'cite:Forests' and @queryable = '1']) &gt;0 and    count(//Layer[Title = 'cite:Lakes' and @queryable = '1']) &gt;0 and    count(//Layer[Title = 'cite:NamedPlaces' and @queryable = '1']) &gt;0 and    count(//Layer[Title = 'cite:Ponds' and @queryable = '1']) &gt;0 and    count(/WMT_MS_Capabilities/Capability/Request/GetFeatureInfo) &gt;0   " />
        </xsl:variable>
        <xsl:variable name="VAR_BASIC_POLYGONS">
          <xsl:value-of select="string(//Layer[Title = 'cite:BasicPolygons']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_BRIDGES">
          <xsl:value-of select="string(//Layer[Title = 'cite:Bridges']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_BUILDINGS">
          <xsl:value-of select="string(//Layer[Title = 'cite:Buildings']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_DIVIDED_ROUTES">
          <xsl:value-of select="string(//Layer[Title = 'cite:DividedRoutes']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_FORESTS">
          <xsl:value-of select="string(//Layer[Title = 'cite:Forests']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_LAKES">
          <xsl:value-of select="string(//Layer[Title = 'cite:Lakes']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_MAP_NEATLINE">
          <xsl:value-of select="string(//Layer[Title = 'cite:MapNeatline']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_NAMED_PLACES">
          <xsl:value-of select="string(//Layer[Title = 'cite:NamedPlaces']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_PONDS">
          <xsl:value-of select="string(//Layer[Title = 'cite:Ponds']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_ROAD_SEGMENTS">
          <xsl:value-of select="string(//Layer[Title = 'cite:RoadSegments']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_STREAMS">
          <xsl:value-of select="string(//Layer[Title = 'cite:Streams']/Name)" />
        </xsl:variable>
        <xsl:variable name="VAR_GET_FEATURE_INFO_FORMAT">
          <!-- remove white space -->
          <xsl:value-of
                  select="replace((//GetFeatureInfo/Format[(position() = 1 and last() = 1) or . != 'application/vnd.ogc.gml'])[1], '\s+', '')" />
        </xsl:variable>
        <xsl:variable name="updatesequence" select="string-length($VAR_CURRENT_UPDATESEQUENCE) &gt;0" />
        <xsl:variable name="expression">
          <xsl:value-of select="$VAR_STDDATA_EXISTS" />()
        </xsl:variable>
        <xsl:variable name="stddata" select="saxon:evaluate($expression)" />
        <xsl:variable name="expression">
          <xsl:value-of select="$VAR_QUERYABLE_LAYERS_EXIST" />()
        </xsl:variable>
        <xsl:variable name="queryable" select="saxon:evaluate($expression)" />
        <xsl:variable name="namedstyle" select="string-length($VAR_STYLE) &gt;0" />
        <xsl:variable name="inherentstyle" select="string-length($VAR_INHERENT_STYLE) &gt;0" />
        <xsl:variable name="inheritedstyle" select="string-length($VAR_INHERITED_STYLE) &gt;0" />
        <xsl:variable name="inherentsrs" select="string-length($VAR_LAYER_WITH_INHERENT_SRS) &gt;0" />
        <xsl:variable name="inheritedsrs" select="string-length($VAR_LAYER_WITH_INHERITED_SRS) &gt;0" />
        <xsl:variable name="gif"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/gif']) &gt;0" />
        <xsl:variable name="jpeg"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/jpeg']) &gt;0" />
        <xsl:variable name="png"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/png']) &gt;0" />
        <xsl:variable name="transparency"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/gif' or Format = 'image/png']) &gt;0" />
        <xsl:variable name="readable"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/gif' or Format = 'image/png' or Format = 'image/jpeg']) &gt;0" />
        <xsl:variable name="lossless"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetMap[Format = 'image/gif' or Format = 'image/png']) &gt;0" />
        <xsl:variable name="se_inimage"
                      select="count(/WMT_MS_Capabilities/Capability/Exception[Format = 'application/vnd.ogc.se_inimage']) &gt;0" />
        <xsl:variable name="se_blank"
                      select="count(/WMT_MS_Capabilities/Capability/Exception[Format = 'application/vnd.ogc.se_blank']) &gt;0" />
        <xsl:variable name="getfeatureinfo"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetFeatureInfo) &gt;0" />
        <xsl:variable name="unqueryablelayer" select="string-length($VAR_UNQUERYABLE_LAYER) &gt;0" />
        <xsl:variable name="gml"
                      select="count(/WMT_MS_Capabilities/Capability/Request/GetFeatureInfo/Format[. = 'application/vnd.ogc.gml']) &gt;0" />
        <xsl:variable name="hosturl">
          <xsl:value-of select="string('cite.opengeospatial.org')" />
        </xsl:variable>
        <!--
          <xsl:message>
            <xsl:value-of select="concat('is-interactive-enabled: ', $is-interactive-enabled)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('auto_updatesequence: ', $auto_updatesequence)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('manual_updatesequence: ', $manual_updatesequence)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_HIGH_UPDATESEQUENCE: ', $VAR_HIGH_UPDATESEQUENCE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LOW_UPDATESEQUENCE: ', $VAR_LOW_UPDATESEQUENCE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('no_profile: ', $no_profile)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('basic_profile: ', $basic_profile)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('queryable_profile: ', $queryable_profile)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('recommended: ', $recommended)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('testgml: ', $testgml)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('free: ', $free)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('loosebboxconstraints: ', $loosebboxconstraints)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('strictbboxconstraints: ', $strictbboxconstraints)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('eitherbboxconstraint: ', $eitherbboxconstraint)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_WMS_VERSION: ', $VAR_WMS_VERSION)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL: ', $VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_WMS_GET_MAP_HTTP_GET_URL: ', $VAR_WMS_GET_MAP_HTTP_GET_URL)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL: ', $VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_CURRENT_UPDATESEQUENCE: ', $VAR_CURRENT_UPDATESEQUENCE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_AUTO_HIGH_UPDATESEQUENCE: ', $VAR_AUTO_HIGH_UPDATESEQUENCE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_AUTO_LOW_UPDATESEQUENCE: ', $VAR_AUTO_LOW_UPDATESEQUENCE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_IMAGE_FORMAT: ', $VAR_IMAGE_FORMAT)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_READABLE_IMAGE_FORMAT: ', $VAR_READABLE_IMAGE_FORMAT)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LOSSLESS_FORMAT: ', $VAR_LOSSLESS_FORMAT)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_TRANSPARENT_FORMAT: ', $VAR_TRANSPARENT_FORMAT)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_INHERENT_STYLE: ', $VAR_INHERENT_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAYER_WITH_INHERENT_STYLE: ', $VAR_LAYER_WITH_INHERENT_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_INHERITED_STYLE: ', $VAR_INHERITED_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAYER_WITH_INHERITED_STYLE: ', $VAR_LAYER_WITH_INHERITED_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_STYLE: ', $VAR_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAYER_WITH_STYLE: ', $VAR_LAYER_WITH_STYLE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAYER_WITH_INHERENT_SRS: ', $VAR_LAYER_WITH_INHERENT_SRS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAYER_WITH_INHERITED_SRS: ', $VAR_LAYER_WITH_INHERITED_SRS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_UNQUERYABLE_LAYER: ', $VAR_UNQUERYABLE_LAYER)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_STDDATA_EXISTS: ', $VAR_STDDATA_EXISTS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_QUERYABLE_LAYERS_EXIST: ', $VAR_QUERYABLE_LAYERS_EXIST)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_BASIC_POLYGONS: ', $VAR_BASIC_POLYGONS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_BRIDGES: ', $VAR_BRIDGES)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_BUILDINGS: ', $VAR_BUILDINGS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_DIVIDED_ROUTES: ', $VAR_DIVIDED_ROUTES)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_FORESTS: ', $VAR_FORESTS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_LAKES: ', $VAR_LAKES)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_MAP_NEATLINE: ', $VAR_MAP_NEATLINE)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_NAMED_PLACES: ', $VAR_NAMED_PLACES)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_PONDS: ', $VAR_PONDS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_ROAD_SEGMENTS: ', $VAR_ROAD_SEGMENTS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_STREAMS: ', $VAR_STREAMS)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('VAR_GET_FEATURE_INFO_FORMAT: ', $VAR_GET_FEATURE_INFO_FORMAT)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('updatesequence: ', $updatesequence)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('stddata: ', $stddata)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('queryable: ', $queryable)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('namedstyle: ', $namedstyle)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('inherentstyle: ', $inherentstyle)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('inheritedstyle: ', $inheritedstyle)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('inherentsrs: ', $inherentsrs)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('inheritedsrs: ', $inheritedsrs)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('gif: ', $gif)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('jpeg: ', $jpeg)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('png: ', $png)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('transparency: ', $transparency)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('readable: ', $readable)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('lossless: ', $lossless)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('se_inimage: ', $se_inimage)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('se_blank: ', $se_blank)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('getfeatureinfo: ', $getfeatureinfo)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('unqueryablelayer: ', $unqueryablelayer)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('gml: ', $gml)"/>
          </xsl:message>
          <xsl:message>
             <xsl:value-of select="concat('hosturl: ', $hosturl)"/>
          </xsl:message>
-->

        <call-test name="wms:wms-no-profile">
          <with-param name="auto_updatesequence" select="$auto_updatesequence" />
          <with-param name="getfeatureinfo" select="$getfeatureinfo" />
          <with-param name="gif" select="$gif" />
          <with-param name="inherentsrs" select="$inherentsrs" />
          <with-param name="inherentstyle" select="$inherentstyle" />
          <with-param name="inheritedsrs" select="$inheritedsrs" />
          <with-param name="inheritedstyle" select="$inheritedstyle" />
          <with-param name="is-interactive-enabled" select="$is-interactive-enabled" />
          <with-param name="jpeg" select="$jpeg" />
          <with-param name="lossless" select="$lossless" />
          <with-param name="manual_updatesequence" select="$manual_updatesequence" />
          <with-param name="namedstyle" select="$namedstyle" />
          <with-param name="png" select="$png" />
          <with-param name="queryable" select="$queryable" />
          <with-param name="readable" select="$readable" />
          <with-param name="se_blank" select="$se_blank" />
          <with-param name="se_inimage" select="$se_inimage" />
          <with-param name="stddata" select="$stddata" />
          <with-param name="transparency" select="$transparency" />
          <with-param name="unqueryablelayer" select="$unqueryablelayer" />
          <with-param name="updatesequence" select="$updatesequence" />
          <with-param name="hosturl" select="$hosturl" />
          <with-param name="VAR_AUTO_HIGH_UPDATESEQUENCE" select="$VAR_AUTO_HIGH_UPDATESEQUENCE" />
          <with-param name="VAR_AUTO_LOW_UPDATESEQUENCE" select="$VAR_AUTO_LOW_UPDATESEQUENCE" />
          <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
          <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
          <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
          <with-param name="VAR_CURRENT_UPDATESEQUENCE" select="$VAR_CURRENT_UPDATESEQUENCE" />
          <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
          <with-param name="VAR_FORESTS" select="$VAR_FORESTS" />
          <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
          <with-param name="VAR_HIGH_UPDATESEQUENCE" select="$VAR_HIGH_UPDATESEQUENCE" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_INHERENT_STYLE" select="$VAR_INHERENT_STYLE" />
          <with-param name="VAR_INHERITED_STYLE" select="$VAR_INHERITED_STYLE" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_LAYER_WITH_INHERENT_SRS" select="$VAR_LAYER_WITH_INHERENT_SRS" />
          <with-param name="VAR_LAYER_WITH_INHERENT_STYLE" select="$VAR_LAYER_WITH_INHERENT_STYLE" />
          <with-param name="VAR_LAYER_WITH_INHERITED_SRS" select="$VAR_LAYER_WITH_INHERITED_SRS" />
          <with-param name="VAR_LAYER_WITH_INHERITED_STYLE" select="$VAR_LAYER_WITH_INHERITED_STYLE" />
          <with-param name="VAR_LAYER_WITH_STYLE" select="$VAR_LAYER_WITH_STYLE" />
          <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
          <with-param name="VAR_LOW_UPDATESEQUENCE" select="$VAR_LOW_UPDATESEQUENCE" />
          <with-param name="VAR_MAP_NEATLINE" select="$VAR_MAP_NEATLINE" />
          <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
          <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
          <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
          <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
          <with-param name="VAR_STYLE" select="$VAR_STYLE" />
          <with-param name="VAR_TRANSPARENT_FORMAT" select="$VAR_TRANSPARENT_FORMAT" />
          <with-param name="VAR_UNQUERYABLE_LAYER" select="$VAR_UNQUERYABLE_LAYER" />
          <with-param name="VAR_WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        </call-test>

        <xsl:if test="$basic_profile or $queryable_profile">
          <call-test name="wms:wms-basic">
            <with-param name="hosturl" select="$hosturl" />
            <with-param name="VAR_STDDATA_EXISTS" select="$VAR_STDDATA_EXISTS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
          </call-test>
        </xsl:if>

        <xsl:if test="$queryable_profile">
          <call-test name="wms:wms-queryable">
            <with-param name="hosturl" select="$hosturl" />
            <with-param name="VAR_WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
            <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
            <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_QUERYABLE_LAYERS_EXIST" select="$VAR_QUERYABLE_LAYERS_EXIST" />
            <with-param name="VAR_STDDATA_EXISTS" select="$VAR_STDDATA_EXISTS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
            <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
            <with-param name="VAR_FORESTS" select="$VAR_FORESTS" />
            <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
          </call-test>
        </xsl:if>

        <xsl:if test="$recommended">
          <call-test name="wms:wms-recommended">
            <with-param name="stddata" select="$stddata" />
            <with-param name="lossless" select="$lossless" />
            <with-param name="hosturl" select="$hosturl" />
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          </call-test>
        </xsl:if>

        <xsl:if test="$testgml">
          <call-test name="wms:wms-getfeatureinfo">
            <with-param name="queryable" select="$queryable" />
            <with-param name="gml" select="$gml" />
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
            <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          </call-test>
        </xsl:if>

        <xsl:if test="$free">
          <call-test name="wms:wms-fees">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          </call-test>
        </xsl:if>

        <xsl:if test="$loosebboxconstraints or $strictbboxconstraints">
          <call-test name="wms:wms-bbox">
            <with-param name="loosebboxconstraints" select="$loosebboxconstraints" />
            <with-param name="strictbboxconstraints" select="$strictbboxconstraints" />
            <with-param name="lossless" select="$lossless" />
            <with-param name="stddata" select="$stddata" />
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          </call-test>
        </xsl:if>

      </xsl:for-each>
    </code>
  </test>

  <test name="wms:wms-no-profile" isConformanceClass="true" isBasic="true">
    <param name="auto_updatesequence" />
    <param name="getfeatureinfo" />
    <param name="gif" />
    <param name="inherentsrs" />
    <param name="inherentstyle" />
    <param name="inheritedsrs" />
    <param name="inheritedstyle" />
    <param name="is-interactive-enabled" />
    <param name="jpeg" />
    <param name="lossless" />
    <param name="manual_updatesequence" />
    <param name="namedstyle" />
    <param name="png" />
    <param name="queryable" />
    <param name="readable" />
    <param name="se_blank" />
    <param name="se_inimage" />
    <param name="stddata" />
    <param name="transparency" />
    <param name="unqueryablelayer" />
    <param name="updatesequence" />
    <param name="hosturl" />
    <param name="VAR_AUTO_HIGH_UPDATESEQUENCE" />
    <param name="VAR_AUTO_LOW_UPDATESEQUENCE" />
    <param name="VAR_BASIC_POLYGONS" />
    <param name="VAR_BRIDGES" />
    <param name="VAR_BUILDINGS" />
    <param name="VAR_CURRENT_UPDATESEQUENCE" />
    <param name="VAR_DIVIDED_ROUTES" />
    <param name="VAR_FORESTS" />
    <param name="VAR_GET_FEATURE_INFO_FORMAT" />
    <param name="VAR_HIGH_UPDATESEQUENCE" />
    <param name="VAR_IMAGE_FORMAT" />
    <param name="VAR_INHERENT_STYLE" />
    <param name="VAR_INHERITED_STYLE" />
    <param name="VAR_LAKES" />
    <param name="VAR_LAYER_WITH_INHERENT_SRS" />
    <param name="VAR_LAYER_WITH_INHERENT_STYLE" />
    <param name="VAR_LAYER_WITH_INHERITED_SRS" />
    <param name="VAR_LAYER_WITH_INHERITED_STYLE" />
    <param name="VAR_LAYER_WITH_STYLE" />
    <param name="VAR_LOSSLESS_FORMAT" />
    <param name="VAR_LOW_UPDATESEQUENCE" />
    <param name="VAR_MAP_NEATLINE" />
    <param name="VAR_NAMED_PLACES" />
    <param name="VAR_PONDS" />
    <param name="VAR_READABLE_IMAGE_FORMAT" />
    <param name="VAR_ROAD_SEGMENTS" />
    <param name="VAR_STREAMS" />
    <param name="VAR_STYLE" />
    <param name="VAR_TRANSPARENT_FORMAT" />
    <param name="VAR_UNQUERYABLE_LAYER" />
    <param name="VAR_WMS_CAPABILITIES" />
    <param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
    <param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
    <param name="VAR_WMS_GET_MAP_HTTP_GET_URL" />
    <param name="VAR_WMS_VERSION" />
    <assertion>This WMS is valid against 'no' profile</assertion>
    <code>
      <xsl:if test="$stddata and $readable and $is-interactive-enabled = 'true'">
        <call-test name="wms:wmsops-getmap-params-bbox-1">
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
        </call-test>
      </xsl:if>
      <xsl:if test="$stddata and $readable and $is-interactive-enabled = 'true'">
        <call-test name="wms:wmsops-getmap-params-bbox-2">
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
          <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
          <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
          <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
          <with-param name="VAR_MAP_NEATLINE" select="$VAR_MAP_NEATLINE" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
          <with-param name="hosturl" select="$hosturl" />
        </call-test>
      </xsl:if>
      <xsl:if test="$se_inimage and $readable and $is-interactive-enabled = 'true'">
        <call-test name="wms:wmsops-getmap-params-exceptions-3">
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
        </call-test>
      </xsl:if>
      <xsl:if test="$stddata and $readable and $is-interactive-enabled = 'true'">
        <call-test name="wms:wmsops-getmap-params-layers-4">
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_FORESTS" select="$VAR_FORESTS" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
          <with-param name="hosturl" select="$hosturl" />
        </call-test>
      </xsl:if>
      <xsl:if test="$stddata and $readable and $is-interactive-enabled = 'true'">
        <call-test name="wms:wmsops-getmap-params-width_height-3">
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
          <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
          <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
          <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
          <with-param name="VAR_MAP_NEATLINE" select="$VAR_MAP_NEATLINE" />
          <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
        </call-test>
      </xsl:if>
      <call-test name="wms:basic_elements-param_rules-order_and_case-3">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <xsl:if test="$stddata = 'true'">
        <call-test name="wms:basic_elements-param_rules-order_and_case-4">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
      <xsl:if test="$queryable = 'true'">
        <call-test name="wms:basic_elements-param_rules-order_and_case-5">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
          <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
      <call-test name="wms:basic_elements-version-negotiation-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:basic_elements-version-negotiation-4">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:dims-declaring-3">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:dims-declaring-4">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-output_formats-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-request-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>

      <xsl:if test="$updatesequence = 'false'">
        <call-test name="wms:wmsops-getcapabilities-params-updatesequence-1">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                      select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
      <xsl:if test="$updatesequence = 'true'">
        <call-test name="wms:wmsops-getcapabilities-params-updatesequence-2">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_CURRENT_UPDATESEQUENCE" select="$VAR_CURRENT_UPDATESEQUENCE" />
          <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                      select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
        </call-test>
        <xsl:if test="$manual_updatesequence = 'true'">
          <call-test name="wms:wmsops-getcapabilities-params-updatesequence-3">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LOW_UPDATESEQUENCE" select="$VAR_LOW_UPDATESEQUENCE" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                        select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getcapabilities-params-updatesequence-4">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_HIGH_UPDATESEQUENCE" select="$VAR_HIGH_UPDATESEQUENCE" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                        select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$auto_updatesequence = 'true'">
          <call-test name="wms:wmsops-getcapabilities-params-updatesequence-5">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_AUTO_LOW_UPDATESEQUENCE" select="$VAR_AUTO_LOW_UPDATESEQUENCE" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                        select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getcapabilities-params-updatesequence-6">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_AUTO_HIGH_UPDATESEQUENCE" select="$VAR_AUTO_HIGH_UPDATESEQUENCE" />
            <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                        select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
      </xsl:if>

      <call-test name="wms:wmsops-getcapabilities-params-version-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-version-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-version-3">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-version-4">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-version-5">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-params-version-6">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-capability_metadata-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-general_metadata-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-bbox-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-dim_and_extent-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-dim_and_extent-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-identifier_and_authorityurl-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-identifier_and_authorityurl-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-latlonbbox-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-latlonbbox-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-srs-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getcapabilities-response-layer_properties-style-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>

      <xsl:if test="$getfeatureinfo = 'true' and $unqueryablelayer = 'true'">
        <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-6">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_UNQUERYABLE_LAYER" select="$VAR_UNQUERYABLE_LAYER" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
          <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                      select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
      <xsl:if test="$stddata = 'true'">
        <call-test name="wms:wmsops-getmap-params-bbox-5">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-bbox-6">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-bbox-7">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-bbox-8">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-layers-6">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-layers-7">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-srs-3">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-styles-5">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-styles-6">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_PONDS" select="$VAR_PONDS" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-styles-8">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
          <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
          <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
          <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-styles-9">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
          <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
          <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
          <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>

        <xsl:if test="$lossless = 'true'">
          <call-test name="wms:wmsops-getmap-params-bbox-3">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
            <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
            <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
            <with-param name="VAR_BUILDINGS" select="$VAR_BUILDINGS" />
            <with-param name="VAR_MAP_NEATLINE" select="$VAR_MAP_NEATLINE" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-bbox-4">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-bgcolor-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-bgcolor-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-format-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-layers-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-layers-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-layers-3">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_MAP_NEATLINE" select="$VAR_MAP_NEATLINE" />
            <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
            <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <xsl:if test="$gif = 'true'">
            <call-test name="wms:wmsops-getmap-params-format-2">
              <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
              <with-param name="VAR_LAKES" select="$VAR_LAKES" />
              <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
            </call-test>
          </xsl:if>
          <xsl:if test="$jpeg = 'true'">
            <call-test name="wms:wmsops-getmap-params-format-3">
              <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
              <with-param name="VAR_LAKES" select="$VAR_LAKES" />
              <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
            </call-test>
          </xsl:if>
          <xsl:if test="$png = 'true'">
            <call-test name="wms:wmsops-getmap-params-format-4">
              <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
              <with-param name="VAR_LAKES" select="$VAR_LAKES" />
              <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
            </call-test>
          </xsl:if>
        </xsl:if>
        <xsl:if test="$inherentsrs = 'true'">
          <call-test name="wms:wmsops-getmap-params-srs-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_INHERENT_SRS" select="$VAR_LAYER_WITH_INHERENT_SRS" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$inheritedsrs = 'true'">
          <call-test name="wms:wmsops-getmap-params-srs-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_INHERITED_SRS" select="$VAR_LAYER_WITH_INHERITED_SRS" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$inherentstyle = 'true'">
          <call-test name="wms:wmsops-getmap-params-styles-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_INHERENT_STYLE" select="$VAR_LAYER_WITH_INHERENT_STYLE" />
            <with-param name="VAR_INHERENT_STYLE" select="$VAR_INHERENT_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$inheritedstyle = 'true'">
          <call-test name="wms:wmsops-getmap-params-styles-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_INHERITED_STYLE" select="$VAR_LAYER_WITH_INHERITED_STYLE" />
            <with-param name="VAR_INHERITED_STYLE" select="$VAR_INHERITED_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$namedstyle = 'true'">
          <call-test name="wms:wmsops-getmap-params-styles-10">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_STYLE" select="$VAR_LAYER_WITH_STYLE" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_STYLE" select="$VAR_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-styles-3">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_STYLE" select="$VAR_LAYER_WITH_STYLE" />
            <with-param name="VAR_STYLE" select="$VAR_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-styles-4">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_STYLE" select="$VAR_LAYER_WITH_STYLE" />
            <with-param name="VAR_STYLE" select="$VAR_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-styles-7">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAYER_WITH_STYLE" select="$VAR_LAYER_WITH_STYLE" />
            <with-param name="VAR_BRIDGES" select="$VAR_BRIDGES" />
            <with-param name="VAR_ROAD_SEGMENTS" select="$VAR_ROAD_SEGMENTS" />
            <with-param name="VAR_DIVIDED_ROUTES" select="$VAR_DIVIDED_ROUTES" />
            <with-param name="VAR_STYLE" select="$VAR_STYLE" />
            <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$transparency = 'true'">
          <call-test name="wms:wmsops-getmap-params-transparent-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_TRANSPARENT_FORMAT" select="$VAR_TRANSPARENT_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-transparent-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_TRANSPARENT_FORMAT" select="$VAR_TRANSPARENT_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-transparent-3">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_TRANSPARENT_FORMAT" select="$VAR_TRANSPARENT_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$readable = 'true'">
          <call-test name="wms:wmsops-getmap-params-width_height-1">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LAKES" select="$VAR_LAKES" />
            <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-width_height-2">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
            <with-param name="VAR_READABLE_IMAGE_FORMAT" select="$VAR_READABLE_IMAGE_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
      </xsl:if>

      <call-test name="wms:wmsops-getmap-params-exceptions-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getmap-params-exceptions-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
      </call-test>
      <xsl:if test="$se_inimage = 'true'">
        <call-test name="wms:wmsops-getmap-params-exceptions-4">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
      <xsl:if test="$se_blank = 'true'">
        <call-test name="wms:wmsops-getmap-params-exceptions-7">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <xsl:if test="$lossless = 'true'">
          <call-test name="wms:wmsops-getmap-params-exceptions-5">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$transparency = 'true'">
          <call-test name="wms:wmsops-getmap-params-exceptions-6">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_TRANSPARENT_FORMAT" select="$VAR_TRANSPARENT_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
      </xsl:if>
      <call-test name="wms:wmsops-getmap-params-layers-5">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
      </call-test>

      <!-- Extended tests -->

      <ctl:for-each select="$VAR_WMS_CAPABILITIES//Layer/Style[not(Name=../ancestor::Layer/Style/Name)]">
        <ctl:call-test name="wms:wmsops-getmap-each-style">
          <ctl:with-param name="capabilities" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="style" select="./Name" label="each style"
                          label-expr="concat('style &quot;', ./Name, '&quot;')" />
          <ctl:with-param name="layer" select="../Name" />
        </ctl:call-test>
      </ctl:for-each>

      <ctl:for-each select="$VAR_WMS_CAPABILITIES//Layer/Name">
        <ctl:call-test name="wms:wmsops-getmap-each-layer">
          <ctl:with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="layer" select="string(.)" label="each named layer"
                          label-expr="concat('layer &quot;', ., '&quot;')" />
        </ctl:call-test>
      </ctl:for-each>

      <ctl:for-each
              select="$VAR_WMS_CAPABILITIES//Layer//SRS[not(. = ../preceding::Layer/SRS) and not(. = ../ancestor::Layer/SRS) and not(starts-with(., 'AUTO'))]">
        <ctl:call-test name="wms:wmsops-getmap-each-srs">
          <ctl:with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="srs" select="." label="each SRS" label-expr="concat('SRS &quot;', ., '&quot;')" />
        </ctl:call-test>
      </ctl:for-each>

      <ctl:for-each select="$VAR_WMS_CAPABILITIES/Request/GetMap/Format">
        <ctl:call-test name="wms:wmsops-getmap-each-format">
          <ctl:with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="format" select="." label="each GetMap format"
                          label-expr="concat('format &quot;', ., '&quot;')" />
        </ctl:call-test>
      </ctl:for-each>

      <ctl:for-each select="$VAR_WMS_CAPABILITIES/Request/GetMap/Format">
        <ctl:call-test name="wms:wmsops-getmap-each-format-transparent">
          <ctl:with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="format" select="." label="each GetMap format"
                          label-expr="concat('format &quot;', ., '&quot;')" />
        </ctl:call-test>
      </ctl:for-each>

      <call-test name="wms:wmsops-getmap-layer-encoded-name">
        <with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
      </call-test>

      <call-test name="wms:basic_elements-validate-exception">
        <with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
      </call-test>
    </code>
  </test>

  <test name="wms:wms-basic" isConformanceClass="true" isBasic="true">
    <param name="hosturl" />
    <param name="VAR_STDDATA_EXISTS" />
    <param name="VAR_LOSSLESS_FORMAT" />
    <assertion>This WMS is valid against the 'basic' profile</assertion>
    <code>
      <call-test name="wms:profiles-basic-1">
        <with-param name="VAR_STDDATA_EXISTS" select="$VAR_STDDATA_EXISTS" />
        <with-param name="hosturl" select="$hosturl" />
      </call-test>
      <call-test name="wms:profiles-basic-2">
        <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
        <with-param name="hosturl" select="$hosturl" />
      </call-test>
    </code>
  </test>

  <test name="wms:wms-queryable" isConformanceClass="true" isBasic="false">
    <param name="hosturl" />
    <param name="VAR_WMS_CAPABILITIES" />
    <param name="VAR_WMS_VERSION" />
    <param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
    <param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
    <param name="VAR_GET_FEATURE_INFO_FORMAT" />
    <param name="VAR_IMAGE_FORMAT" />
    <param name="VAR_QUERYABLE_LAYERS_EXIST" />
    <param name="VAR_STDDATA_EXISTS" />
    <param name="VAR_LOSSLESS_FORMAT" />
    <param name="VAR_LAKES" />
    <param name="VAR_BASIC_POLYGONS" />
    <param name="VAR_NAMED_PLACES" />
    <param name="VAR_FORESTS" />
    <param name="VAR_STREAMS" />
    <assertion>This WMS is valid against the 'queryable' profile</assertion>
    <code>
      <call-test name="wms:profiles-queryable-1">
        <with-param name="VAR_STDDATA_EXISTS" select="$VAR_STDDATA_EXISTS" />
        <with-param name="hosturl" select="$hosturl" />
      </call-test>
      <call-test name="wms:profiles-queryable-2">
        <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
        <with-param name="hosturl" select="$hosturl" />
      </call-test>
      <call-test name="wms:profiles-queryable-3">
        <with-param name="VAR_QUERYABLE_LAYERS_EXIST" select="$VAR_QUERYABLE_LAYERS_EXIST" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        <with-param name="hosturl" select="$hosturl" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-exceptions-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-exceptions-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-feature_count-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-feature_count-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_BASIC_POLYGONS" select="$VAR_BASIC_POLYGONS" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-info_format-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-3">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_FORESTS" select="$VAR_FORESTS" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-4">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_NAMED_PLACES" select="$VAR_NAMED_PLACES" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_STREAMS" select="$VAR_STREAMS" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <call-test name="wms:wmsops-getfeatureinfo-params-query_layers-5">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_LAKES" select="$VAR_LAKES" />
        <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
        <with-param name="VAR_GET_FEATURE_INFO_FORMAT" select="$VAR_GET_FEATURE_INFO_FORMAT" />
        <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                    select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
      </call-test>
      <ctl:for-each select="$VAR_WMS_CAPABILITIES//Capability/Request/GetFeatureInfo/Format">
        <ctl:call-test name="wms:wmsops-getfeatureinfo-each-info_format">
          <ctl:with-param name="WMS_CAPABILITIES" select="$VAR_WMS_CAPABILITIES" />
          <ctl:with-param name="FORMAT" select="." label="each GetFeatureInfo format"
                          label-expr="concat('format &quot;', ., '&quot;')" />
        </ctl:call-test>
      </ctl:for-each>
    </code>
  </test>

  <test name="wms:wms-recommended" isConformanceClass="true" isBasic="false">
    <param name="stddata" />
    <param name="lossless" />
    <param name="hosturl" />
    <param name="VAR_WMS_VERSION" />
    <param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
    <param name="VAR_WMS_GET_MAP_HTTP_GET_URL" />
    <param name="VAR_IMAGE_FORMAT" />
    <param name="VAR_LOSSLESS_FORMAT" />
    <param name="VAR_LAKES" />
    <param name="VAR_PONDS" />
    <assertion>This WMS is valid against the test 'Recommendation Support'</assertion>
    <code>
      <call-test name="wms:dims-declaring-1">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <xsl:if test="$stddata = 'true'">
        <call-test name="wms:wmsops-getmap-params-request-1">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getmap-params-version-1">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
        </call-test>
        <xsl:if test="$lossless = 'true'">
          <call-test name="wms:wmsops-getmap-params-bbox-10">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
          <call-test name="wms:wmsops-getmap-params-bbox-9">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
      </xsl:if>
    </code>
  </test>

  <test name="wms:wms-getfeatureinfo" isConformanceClass="true" isBasic="false">
    <param name="queryable" />
    <param name="gml" />
    <param name="VAR_WMS_VERSION" />
    <param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
    <param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
    <param name="VAR_IMAGE_FORMAT" />
    <param name="VAR_LAKES" />
    <assertion>This WMS is valid against the test 'GML FeatureInfo'</assertion>
    <code>
      <call-test name="wms:wmsops-getcapabilities-response-capability_metadata-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
      <xsl:if test="$queryable = 'true' and $gml = 'true' ">
        <call-test name="wms:wmsops-getfeatureinfo-params-info_format-2">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                      select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        </call-test>
        <call-test name="wms:wmsops-getfeatureinfo-params-info_format-3">
          <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
          <with-param name="VAR_LAKES" select="$VAR_LAKES" />
          <with-param name="VAR_IMAGE_FORMAT" select="$VAR_IMAGE_FORMAT" />
          <with-param name="VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL"
                      select="$VAR_WMS_GET_FEATURE_INFO_HTTP_GET_URL" />
        </call-test>
      </xsl:if>
    </code>
  </test>

  <test name="wms:wms-fees" isConformanceClass="true" isBasic="false">
    <param name="VAR_WMS_VERSION" />
    <param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
    <assertion>This WMS is valid against the test 'Fees and Access Constraints'</assertion>
    <code>
      <call-test name="wms:wmsops-getcapabilities-response-general_metadata-2">
        <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
        <with-param name="VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL"
                    select="$VAR_WMS_GET_CAPABILITIES_HTTP_GET_URL" />
      </call-test>
    </code>
  </test>

  <test name="wms:wms-bbox" isConformanceClass="true" isBasic="false">
    <param name="loosebboxconstraints" />
    <param name="strictbboxconstraints" />
    <param name="lossless" />
    <param name="stddata" />
    <param name="VAR_WMS_VERSION" />
    <param name="VAR_WMS_GET_MAP_HTTP_GET_URL" />
    <param name="VAR_LOSSLESS_FORMAT" />
    <param name="VAR_PONDS" />
    <assertion>This WMS is valid against the test 'BoundingBox Constraints'</assertion>
    <code>
      <xsl:if test="$lossless = 'true' and $stddata = 'true'">
        <xsl:if test="$loosebboxconstraints = 'true'">
          <call-test name="wms:wmsops-getmap-params-bbox-12">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
        <xsl:if test="$strictbboxconstraints = 'true'">
          <call-test name="wms:wmsops-getmap-params-bbox-11">
            <with-param name="VAR_WMS_VERSION" select="$VAR_WMS_VERSION" />
            <with-param name="VAR_PONDS" select="$VAR_PONDS" />
            <with-param name="VAR_LOSSLESS_FORMAT" select="$VAR_LOSSLESS_FORMAT" />
            <with-param name="VAR_WMS_GET_MAP_HTTP_GET_URL" select="$VAR_WMS_GET_MAP_HTTP_GET_URL" />
          </call-test>
        </xsl:if>
      </xsl:if>
    </code>
  </test>

</package>
